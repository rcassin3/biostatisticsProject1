# Plot the difference between Sea level Change and CO2 Emissions Adjusted
windows()
plot(sort(unlist(yearsAdjusted1[2])-unlist(adjustedSeaLevel[])), main="Difference Between CO2 Emissions and Sea Level Changes (adjusted)", xlab="Year - 1880", ylab="Global CO2 Emissions  - (Cumulative Global Sea Level Changes * 500)")
abline(h=0, col = "springgreen4", lwd=2)
#Calculation of delta CO2 and Sea Level
deltaCO2 <- yearsAdjusted1
deltaCO2[1] <-  deltaCO2[1]
deltaCO2[2] <- deltaCO2[2]-colMeans(deltaCO2[2])[col(deltaCO2[2])]
tempSeaLevel <- yearsAdjusted2
deltaSeaLevel[1] <- yearsAdjusted2[1]
#Calculation of delta CO2 and Sea Level
deltaCO2 <- yearsAdjusted1
deltaCO2[2] <- deltaCO2[2]-colMeans(deltaCO2[2])[col(deltaCO2[2])]
deltaSeaLevel <- yearsAdjusted2
deltaSeaLevel[2] <- deltaSeaLevel[2]-colMeans(deltaSeaLevel[2])[col(deltaSeaLevel[2])]
#ggplot of Delta CO2 Emissions 1880-2010
windows()
ggplot( deltaCO2, aes(x = Year, y = Total) ) + geom_line( color = "blue", linetype = "solid",  size = 1)
#ggplot of Delta Sea Level 1880-2010
windows()
ggplot( deltaSeaLevel, aes(x = Year, y = CSIRO.Adjusted.Sea.Level, group = 1) ) + geom_line( color = "red", linetype = "solid",  size = 1)
#Density, QQ Plot, and Shapiro Test of deltaCO2
windows()
plot(density(unlist(deltaCO2[2])), main = "Density Plot of Total Global CO2 Emmisions 1880-2010")
windows()
qqnorm(unlist(deltaCO2[2]), main = "QQ plot of Total Global CO2 Emmisions 1880-2010")
qqline(unlist(deltaCO2[2]))
print(shapiro.test( as.numeric( deltaCO2$Total ) )) # Use the p-value returned by the normality test
#Density, QQ Plot, and Shapiro Test of delta Sea Level
windows()
plot(density(unlist(deltaSeaLevel[2])), main = "Density plot of Cumulative Sea Levels 1880-2010")
windows()
qqnorm(unlist(deltaSeaLevel[2]), main = "QQ plot of Cumulative Sea Level Change 1880-2010")
qqline(unlist(deltaSeaLevel[2]))
print(shapiro.test( as.numeric( deltaSeaLevel$CSIRO.Adjusted.Sea.Level ) )) # Use the p-value returned by the normality test
#Hist of deltaCO2
windows()
hist(unlist(deltaCO2[2]), main="Global CO2 Emissions", xlab = 'Million Metric Tons of Carbon')
#Hist of delta Sea Level
windows()
hist(unlist(deltaSeaLevel[2]), main="Cumulative Global Sea Level Change", xlab = 'Inches')
# Boxplot of delta CO2 Emissions
windows()
boxplot(unlist(deltaCO2[2]),
main = "Box Plot of Global CO2 Emissions per year", ylab = "Million Metric Tons of Carbon",
names=c("CO2 Emissions"))
# Boxplot of delta Sea Level Changes
windows()
boxplot(unlist(deltaSeaLevel[2]),
main = "Box Plot of Cumulative Global Sea Level Changes", ylab = "Inches",
names=c("Sea Level Changes"))
#ggplot of Delta CO2 Emissions 1880-2010
windows()
ggplot( deltaCO2, aes(x = Year, y = Total) ) + geom_line( color = "blue", linetype = "solid",  size = 1)
#ggplot of Delta Sea Level 1880-2010
windows()
ggplot( deltaSeaLevel, aes(x = Year, y = CSIRO.Adjusted.Sea.Level, group = 1) ) + geom_line( color = "red", linetype = "solid",  size = 1)
#Density, QQ Plot, and Shapiro Test of deltaCO2
windows()
plot(density(unlist(deltaCO2[2])), main = "Density Plot of Total delta Global CO2 Emmisions 1880-2010")
windows()
qqnorm(unlist(deltaCO2[2]), main = "QQ plot of Total delta Global CO2 Emmisions 1880-2010")
qqline(unlist(deltaCO2[2]))
print(shapiro.test( as.numeric( deltaCO2$Total ) )) # Use the p-value returned by the normality test
#Density, QQ Plot, and Shapiro Test of delta Sea Level
windows()
plot(density(unlist(deltaSeaLevel[2])), main = "Density plot of delta Cumulative Sea Levels 1880-2010")
windows()
qqnorm(unlist(deltaSeaLevel[2]), main = "QQ plot of delta Cumulative Sea Level Change 1880-2010")
qqline(unlist(deltaSeaLevel[2]))
print(shapiro.test( as.numeric( deltaSeaLevel$CSIRO.Adjusted.Sea.Level ) )) # Use the p-value returned by the normality test
#Hist of deltaCO2
windows()
hist(unlist(deltaCO2[2]), main="delta Global CO2 Emissions", xlab = 'Million Metric Tons of Carbon')
#Hist of delta Sea Level
windows()
hist(unlist(deltaSeaLevel[2]), main="delta Cumulative Global Sea Level Change", xlab = 'Inches')
# Boxplot of delta CO2 Emissions
windows()
boxplot(unlist(deltaCO2[2]),
main = "Box Plot of delta Global CO2 Emissions per year", ylab = "Million Metric Tons of Carbon",
names=c("CO2 Emissions"))
# Boxplot of delta Sea Level Changes
windows()
boxplot(unlist(deltaSeaLevel[2]),
main = "Box Plot of delta Cumulative Global Sea Level Changes", ylab = "Inches",
names=c("Sea Level Changes"))
#%%%%% NORMALITY VERIFICATION %%%%%
sampleCO2 <- c()
#take 1,000 random samples of size n=30
n = 1000
for (i in 1:n){
sampleCO2[i] = mean(sample(yearsAdjusted1, 30, replace=TRUE))
}
#calculate mean and standard deviation of sample means
sampleMeanCO2 = mean(sampleCO2)
stDevsampleCO2 = sd(sampleCO2)
#Histogram to show distribution
hist(sampleCO2, col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
#%%%%% NORMALITY VERIFICATION %%%%%
#CO2 Example
sampleCO2 <- c()
#take 131 random samples of size n=30
n = 131
for (i in 1:n){
sampleCO2[i] = mean(sample(yearsAdjusted1, 30, replace=TRUE))
}
#calculate mean and standard deviation of sample means
sampleMeanCO2 = mean(sampleCO2)
stDevsampleCO2 = sd(sampleCO2)
#Histogram to show distribution
hist(sampleCO2, col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
#%%%%% NORMALITY VERIFICATION %%%%%
#CO2 Example
sampleCO2 <- c()
#take 131 random samples of size n=30
n = 131
for (i in 1:n){
sampleCO2[i] = mean(sample(yearsAdjusted1[2], 30, replace=TRUE))
}
#calculate mean and standard deviation of sample means
sampleMeanCO2 = mean(sampleCO2)
stDevsampleCO2 = sd(sampleCO2)
#Histogram to show distribution
hist(sampleCO2, col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
#%%%%% NORMALITY VERIFICATION %%%%%
#CO2 Example
sampleCO2 <- c()
#take 131 random samples of size n=30
n = 30
for (i in 1:n){
sampleCO2[i] = mean(sample(yearsAdjusted1[2], n, replace=TRUE))
}
#calculate mean and standard deviation of sample means
sampleMeanCO2 = mean(sampleCO2)
stDevsampleCO2 = sd(sampleCO2)
#Histogram to show distribution
hist(sampleCO2, col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
warnings()
#take 30 random samples
n = 30
for (i in 1:n){
sampleCO2[i] = mean(sample(yearsAdjusted1[2], 30, replace=TRUE))
}
#%%%%% NORMALITY VERIFICATION %%%%%
#CO2 Example
sampleCO2 <- c()
#take 30 random samples
n = 30
for (i in 1:n){
sampleCO2[i] = mean(sample(yearsAdjusted1[2], n, replace=TRUE, prob = NULL))
}
#%%%%% NORMALITY VERIFICATION %%%%%
#CO2 Example
sampleCO2 <- c()
#take 30 random samples
n = 30
for (i in 1:n){
sampleCO2[i] = sample(yearsAdjusted1[2], n, replace=TRUE, prob = NULL)
}
View(sampleCO2)
#%%%%% NORMALITY VERIFICATION %%%%%
#CO2 Example
sampleCO2 <- c()
#take 30 random samples
n = 30
for (i in 1:n){
sampleCO2[i] = sample(yearsAdjusted1[2], size = n, replace=TRUE, prob = NULL)
}
warnings
warnings()
#take 30 random samples
n = 30
sampleCO2 <-  sample(yearsAdjusted1[2], size = n, replace = TRUE)
View(sampleCO2)
#%%%%% NORMALITY VERIFICATION %%%%%
#CO2 Example
sampleVectorCO2 <- yearsAdjusted1[2]
#take 30 random samples
n = 30
sampleCO2 <- sample(sampleVectorCO2, size = n, replace = TRUE)
sampleCO2 <- c()
#%%%%% NORMALITY VERIFICATION %%%%%
#CO2 Example
sampleVectorCO2 <- yearsAdjusted1[2]
#take 30 random samples
n = 30
sampleCO2 <- sample(sampleVectorCO2, size = n, replace = TRUE)
View(sampleCO2)
#%%%%% NORMALITY VERIFICATION %%%%%
#CO2 Example
sampleVectorCO2 <- yearsAdjusted1[2]
#take 30 random samples
n = 30
sampleCO2 <- sample_n(sampleVectorCO2, size = n, replace = TRUE)
View(sampleCO2)
#calculate mean and standard deviation of sample means
sampleMeanCO2 = mean(sampleCO2)
stDevsampleCO2 = sd(sampleCO2)
#calculate mean and standard deviation of sample means
sampleMeanCO2 = colMean(sampleCO2[1])
#calculate mean and standard deviation of sample means
sampleMeanCO2 = colMeans(sampleCO2[1])
install.packages("matrixStats")
#calculate mean and standard deviation of sample means
sampleMeanCO2 = colMeans(sampleCO2[1])
stDevsampleCO2 = colSds(sampleCO2[1])
library(matrixStats)
#calculate mean and standard deviation of sample means
sampleMeanCO2 = colMeans(sampleCO2[1])
stDevsampleCO2 = colSds(sampleCO2[1])
stDevsampleCO2 = colSds(sampleCO2[1])
#calculate mean and standard deviation of sample means
sampleMeanCO2 = colMeans(sampleCO2)
stDevsampleCO2 = colSds(sampleCO2)
sampleVectorCO2[] <- yearsAdjusted1[2]
#take 30 random samples
n = 30
sampleCO2 <- sample_n(sampleVectorCO2, size = n, replace = TRUE)
#calculate mean and standard deviation of sample means
sampleMeanCO2 = colMeans(sampleCO2)
stDevsampleCO2 = colSds(sampleCO2)
#%%%%% NORMALITY VERIFICATION %%%%%
#CO2 Example
sampleVectorCO2[] <- yearsAdjusted1[2]
#take 30 random samples
n = 30
sampleCO2 <- sample_n(sampleVectorCO2, size = n, replace = TRUE)
#Histogram to show distribution
hist(sampleCO2, col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
#take 30 random samples
n = 30
sampleCO2 <- as.numeric(sample_n(sampleVectorCO2, size = n, replace = TRUE))
sampleVectorCO2[] <- yearsAdjusted1[2]
#take 30 random samples
n = 30
sampleCO2 <- sample_n(sampleVectorCO2, size = n, replace = TRUE)
#Histogram to show distribution
hist(as.integer(sampleCO2), col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
#Histogram to show distribution
hist(unlist(sampleCO2), col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
#Histogram to show distribution
hist(unlist(sampleCO2), col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
#Histogram to show distribution
window()
#Histogram to show distribution
window()
#Histogram to show distribution
windows()
hist(unlist(sampleCO2), col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
#take 30 random samples
n = 100
sampleCO2 <- sample_n(sampleVectorCO2, size = n, replace = TRUE)
#Histogram to show distribution
windows()
hist(unlist(sampleCO2), col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
#%%%%% NORMALITY VERIFICATION %%%%%
#CO2 Example
sampleVectorCO2[] <- yearsAdjusted1[2]
#take 30 random samples
n = 100
samplemeansCO2 <- mean(sample_n(sampleVectorCO2, size = n, replace = TRUE))
#Histogram to show distribution
windows()
hist(unlist(sampleCO2), col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
#take 30 random samples
n = 30
samplemeansCO2 <- mean(sample_n(sampleVectorCO2, size = n, replace = TRUE))
#CO2 Example
sampleVectorCO2[] <- yearsAdjusted1[2]
#take 30 random samples
n = 30
samplemeansCO2 <- mean(unlist(sample_n(sampleVectorCO2, size = n, replace = TRUE)))
#%%%%% NORMALITY VERIFICATION %%%%%
#CO2 Example
sampleVectorCO2[] <- yearsAdjusted1[2]
#take 30 random samples
n = 30
sampleCO2 <- sample_n(sampleVectorCO2, size = n, replace = TRUE)
sampleMeansCO2 <- colMeans(sampleCO2)
#%%%%% NORMALITY VERIFICATION %%%%%
#CO2 Example
sampleVectorCO2[] <- yearsAdjusted1[2]
#take 1000 random samples means of size 30
n = 1000
for (i in 1:n){
sampleCO2[i] <-colMeans( sample_n(sampleVectorCO2, size = 30, replace = TRUE))
}
#CO2 Example
sampleVectorCO2[] <- yearsAdjusted1[2]
#take 1000 random samples means of size 30
n = 1000
for (i in 1:n){
sampleMeansCO2[i] <-colMeans( sample_n(sampleVectorCO2, size = 30, replace = TRUE))
}
#Histogram to show distribution
windows()
hist(unlist(sampleMeansCO2), col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
#CO2 Example
sampleVectorCO2[] <- yearsAdjusted1[2]
#take 1000 random samples means of sizes, 5, 30, 100
n = 1000
for (i in 1:n){
sampleMeans5CO2[i] <-colMeans( sample_n(sampleVectorCO2, size = 5, replace = TRUE))
}
sampleVectorCO2[] <- yearsAdjusted1[2]
#take 1000 random samples means of sizes, 5, 30, 100
n = 1000
sampleMeans5CO2 <- c()
sampleMeans30CO2 <- c()
sampleMeans100CO2 <- c()
for (i in 1:n){
sampleMeans5CO2[i] <-colMeans( sample_n(sampleVectorCO2, size = 5, replace = TRUE))
}
for (i in 1:n){
sampleMeans30CO2[i] <-colMeans( sample_n(sampleVectorCO2, size = 30, replace = TRUE))
}
for (i in 1:n){
sampleMeans100CO2[i] <-colMeans( sample_n(sampleVectorCO2, size = 100, replace = TRUE))
}
#Histogram to show distribution
windows()
hist(unlist(sampleMeans5CO2), col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
windows()
hist(unlist(sampleMeans30CO2), col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
windows()
hist(unlist(sampleMeans100CO2), col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
windows()
hist(unlist(sampleMeans5CO2), col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 5')
windows()
hist(unlist(sampleMeans30CO2), col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
windows()
hist(unlist(sampleMeans100CO2), col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 100')
#Sea Level  Example
sampleVectorSea[] <- yearsAdjusted2[2]
#Sea Level  Example
sampleVectorSea <- yearsAdjusted2[2]
#take 1000 random samples means of sizes, 5, 30, 100
n = 1000
sampleMeans5Sea <- c()
sampleMeans30Sea <- c()
sampleMeans100Sea <- c()
for (i in 1:n){
sampleMeans5Sea[i] <-colMeans( sample_n(sampleVectorSea, size = 5, replace = TRUE))
}
for (i in 1:n){
sampleMeans30Sea[i] <-colMeans( sample_n(sampleVectorSea, size = 30, replace = TRUE))
}
for (i in 1:n){
sampleMeans100Sea[i] <-colMeans( sample_n(sampleVectorSea, size = 100, replace = TRUE))
}
#Histogram to show distribution
windows()
hist(unlist(sampleMeans5Sea), col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 5')
windows()
hist(unlist(sampleMeans30Sea), col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 30')
windows()
hist(unlist(sampleMeans100Sea), col ='blue', xlab='Global CO2 Emissions in Million Metric Tons of Carbon', main='Sample size = 100')
windows()
hist(unlist(sampleMeans5CO2), col ='blue', xlab='Sample Mean of CO2 Emissions', main='Sample size = 5')
windows()
hist(unlist(sampleMeans30CO2), col ='blue', xlab='Sample Mean of CO2 Emissions', main='Sample size = 30')
windows()
hist(unlist(sampleMeans100CO2), col ='blue', xlab='Sample Mean of CO2 Emissions', main='Sample size = 100')
windows()
hist(unlist(sampleMeans5Sea), col ='blue', xlab='Sample Mean of Cumulative Sea Levels', main='Sample size = 5')
windows()
hist(unlist(sampleMeans30Sea), col ='blue', xlab='Sample Mean of Cumulative Sea Levels', main='Sample size = 30')
windows()
hist(unlist(sampleMeans100Sea), col ='blue', xlab='Sample Mean of Cumulative Sea Levels', main='Sample size = 100')
windows()
hist(unlist(sampleMeans5CO2), col ='blue', xlab='Sample Mean of CO2 Emissions', main='Sample size = 5')
windows()
hist(unlist(sampleMeans30CO2), col ='blue', xlab='Sample Mean of CO2 Emissions', main='Sample size = 30')
windows()
hist(unlist(sampleMeans100CO2), col ='blue', xlab='Sample Mean of CO2 Emissions', main='Sample size = 100')
windows()
hist(unlist(sampleMeans5Sea), col ='red', xlab='Sample Mean of Cumulative Sea Levels', main='Sample size = 5')
windows()
hist(unlist(sampleMeans30Sea), col ='red', xlab='Sample Mean of Cumulative Sea Levels', main='Sample size = 30')
windows()
hist(unlist(sampleMeans100Sea), col ='red', xlab='Sample Mean of Cumulative Sea Levels', main='Sample size = 100')
plot(density(unlist(sampleMeans100Sea)), main = "Density plot of delta Cumulative Sea Levels 1880-2010")
print(shapiro.test( as.numeric( sampleMeans100Sea ) )) # Use the p-value returned by the normality test
print(shapiro.test( as.numeric( sampleMeans5CO2 ) )) # Use the p-value returned by the normality test
print(shapiro.test( as.numeric( sampleMeans30CO2 ) )) # Use the p-value returned by the normality test
print(shapiro.test( as.numeric( sampleMeans100CO2 ) )) # Use the p-value returned by the normality test
#Histogram to show distribution
windows()
hist(unlist(sampleMeans5CO2), col ='blue', xlab='Sample Mean of CO2 Emissions', main='Sample size = 5')
windows()
hist(unlist(sampleMeans30CO2), col ='blue', xlab='Sample Mean of CO2 Emissions', main='Sample size = 30')
windows()
hist(unlist(sampleMeans100CO2), col ='blue', xlab='Sample Mean of CO2 Emissions', main='Sample size = 100')
print(shapiro.test( as.numeric( sampleMeans5CO2 ) )) # Use the p-value returned by the normality test
print(shapiro.test( as.numeric( sampleMeans30CO2 ) )) # Use the p-value returned by the normality test
print(shapiro.test( as.numeric( sampleMeans100CO2 ) )) # Use the p-value returned by the normality test
windows()
hist(unlist(sampleMeans5Sea), col ='red', xlab='Sample Mean of Cumulative Sea Levels', main='Sample size = 5')
windows()
hist(unlist(sampleMeans30Sea), col ='red', xlab='Sample Mean of Cumulative Sea Levels', main='Sample size = 30')
windows()
hist(unlist(sampleMeans100Sea), col ='red', xlab='Sample Mean of Cumulative Sea Levels', main='Sample size = 100')
print(shapiro.test( as.numeric( sampleMeans5Sea ) )) # Use the p-value returned by the normality test
print(shapiro.test( as.numeric( sampleMeans30Sea ) )) # Use the p-value returned by the normality test
print(shapiro.test( as.numeric( sampleMeans100Sea ) )) # Use the p-value returned by the normality test
# Plot the difference between Sea level Change and CO2 Emissions Unadjusted
windows()
plot(sort(unlist(yearsAdjusted1[2])-unlist(yearsAdjusted2[2])), main="Difference Between CO2 Emissions and Sea Level Change (unadjusted)", xlab="Year - 1880", ylab="Global CO2 Emissions  - Cumulative Global Sea Level Changes (unadjusted)" )
abline(h=0, col = "springgreen4", lwd=2)
# Plot the difference between Sea level Change and CO2 Emissions Adjusted
windows()
plot(sort(unlist(yearsAdjusted1[2])-unlist(adjustedSeaLevel[])), main="Difference Between CO2 Emissions and Sea Level Changes (adjusted)", xlab="Year - 1880", ylab="Global CO2 Emissions  - (Cumulative Global Sea Level Changes * 500)")
abline(h=0, col = "springgreen4", lwd=2)
# Dot plot of CO2 Emissions vs Sea Level Change (adjusted) dividing lines
windows()
plot(unlist(yearsAdjusted1[2]),unlist(adjustedSeaLevel[]), xlab = 'Sea Level * 500 to adjust magnitude', ylab = 'Global Co2 Emissions')
# Plot the difference between Sea level Change and CO2 Emissions Unadjusted
windows()
plot(sort(unlist(yearsAdjusted1[2])-unlist(yearsAdjusted2[2])), main="Difference Between CO2 Emissions and Sea Level Change (unadjusted)", xlab="Year - 1880", ylab="Global CO2 Emissions  - Cumulative Global Sea Level Changes (unadjusted)" )
abline(h=0, col = "springgreen4", lwd=2)
# Plot the difference between Sea level Change and CO2 Emissions Adjusted
windows()
plot(sort(unlist(yearsAdjusted1[2])-unlist(adjustedSeaLevel[])), main="Difference Between CO2 Emissions and Sea Level Changes (adjusted)", xlab="Year - 1880", ylab="Global CO2 Emissions  - (Cumulative Global Sea Level Changes * 500)")
abline(h=0, col = "springgreen4", lwd=2)
#ggplot of Delta CO2 Emissions 1880-2010
windows()
ggplot( deltaCO2, aes(x = Year, y = Total) ) + geom_line( color = "blue", linetype = "solid",  size = 1)
#Density, QQ Plot, and Shapiro Test of deltaCO2
windows()
plot(density(unlist(deltaCO2[2])), main = "Density Plot of Total delta Global CO2 Emmisions 1880-2010")
windows()
qqnorm(unlist(deltaCO2[2]), main = "QQ plot of Total delta Global CO2 Emmisions 1880-2010")
qqline(unlist(deltaCO2[2]))
print(shapiro.test( as.numeric( deltaCO2$Total ) )) # Use the p-value returned by the normality test
#Hist of deltaCO2
windows()
hist(unlist(deltaCO2[2]), main="delta Global CO2 Emissions", xlab = 'Million Metric Tons of Carbon')
# Boxplot of delta CO2 Emissions
windows()
boxplot(unlist(deltaCO2[2]),
main = "Box Plot of delta Global CO2 Emissions per year", ylab = "Million Metric Tons of Carbon",
names=c("CO2 Emissions"))
#Density, QQ Plot, and Shapiro Test of delta Sea Level
windows()
plot(density(unlist(deltaSeaLevel[2])), main = "Density plot of delta Cumulative Sea Levels 1880-2010")
windows()
qqnorm(unlist(deltaSeaLevel[2]), main = "QQ plot of delta Cumulative Sea Level Change 1880-2010")
qqline(unlist(deltaSeaLevel[2]))
print(shapiro.test( as.numeric( deltaSeaLevel$CSIRO.Adjusted.Sea.Level ) )) # Use the p-value returned by the normality test
#Hist of delta Sea Level
windows()
hist(unlist(deltaSeaLevel[2]), main="delta Cumulative Global Sea Level Change", xlab = 'Inches')
# Boxplot of delta Sea Level Changes
windows()
boxplot(unlist(deltaSeaLevel[2]),
main = "Box Plot of delta Cumulative Global Sea Level Changes", ylab = "Inches",
names=c("Sea Level Changes"))
#ggplot of Delta Sea Level 1880-2010
windows()
ggplot( deltaSeaLevel, aes(x = Year, y = CSIRO.Adjusted.Sea.Level, group = 1) ) + geom_line( color = "red", linetype = "solid",  size = 1)
windows()
plot(density(unlist(deltaSeaLevel[2])), main = "Density plot of delta Cumulative Sea Levels 1880-2010")
#ggplot of CO2 Emissions 1880-2010
yearsAdjusted1 <- subset(df, df$Year >= 1880)
windows()
ggplot( yearsAdjusted1, aes(x = Year,y = Total) ) + geom_line( color = "blue", linetype = "solid",  size = 1)
#ggplot of Sea Level 1880-2010
windows()
ggplot( yearsAdjusted2, aes(x = Year,y = CSIRO.Adjusted.Sea.Level, group = 1) ) + geom_line( color = "red", linetype = "solid",  size = 1)
#Density, QQ Plot, and Shapiro Test of CO2
windows()
plot(density(unlist(yearsAdjusted1[2])), main = "Density Plot of Total Global CO2 Emmisions 1880-2010")
windows()
qqnorm(unlist(yearsAdjusted1[2]), main = "QQ plot of Total Global CO2 Emmisions 1880-2010")
qqline(unlist(yearsAdjusted1[2]))
print(shapiro.test( as.numeric( yearsAdjusted1$Total ) )) # Use the p-value returned by the normality test
#Density, QQ Plot, and Shapiro Test of Sea Level
windows()
plot(density(unlist(yearsAdjusted2[2])), main = "Density plot of Cumulative Sea Levels 1880-2010")
windows()
qqnorm(unlist(yearsAdjusted2[2]), main = "QQ plot of Cumulative Sea Level Change 1880-2010")
qqline(unlist(yearsAdjusted2[2]))
print(shapiro.test( as.numeric( yearsAdjusted2$CSIRO.Adjusted.Sea.Level ) )) # Use the p-value returned by the normality test
#ggplot of CO2 Emissions 1880-2010
yearsAdjusted1 <- subset(df, df$Year >= 1880)
windows()
ggplot( yearsAdjusted1, aes(x = Year,y = Total) ) + geom_line( color = "blue", linetype = "solid",  size = 1)
#ggplot of Sea Level 1880-2010
windows()
ggplot( yearsAdjusted2, aes(x = Year,y = CSIRO.Adjusted.Sea.Level, group = 1) ) + geom_line( color = "red", linetype = "solid",  size = 1)
#Density, QQ Plot, and Shapiro Test of CO2
windows()
plot(density(unlist(yearsAdjusted1[2])), main = "Density Plot of Total Global CO2 Emmisions 1880-2010")
windows()
qqnorm(unlist(yearsAdjusted1[2]), main = "QQ plot of Total Global CO2 Emmisions 1880-2010")
qqline(unlist(yearsAdjusted1[2]))
print(shapiro.test( as.numeric( yearsAdjusted1$Total ) )) # Use the p-value returned by the normality test
#Density, QQ Plot, and Shapiro Test of Sea Level
windows()
plot(density(unlist(yearsAdjusted2[2])), main = "Density plot of Cumulative Sea Levels 1880-2010")
windows()
qqnorm(unlist(yearsAdjusted2[2]), main = "QQ plot of Cumulative Sea Level Change 1880-2010")
qqline(unlist(yearsAdjusted2[2]))
print(shapiro.test( as.numeric( yearsAdjusted2$CSIRO.Adjusted.Sea.Level ) )) # Use the p-value returned by the normality test
#Hist of CO2
# Histogram
windows()
hist(unlist(yearsAdjusted1[2]), main="Global CO2 Emissions", xlab = 'Million Metric Tons of Carbon')
#Hist of Sea Level
windows()
hist(unlist(yearsAdjusted2[2]), main="Cumulative Global Sea Level Change", xlab = 'Inches')
